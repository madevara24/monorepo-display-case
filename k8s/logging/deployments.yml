apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:latest
          args:
            - -config.file=/etc/loki/loki.yaml
          ports:
            - containerPort: 3100
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/loki.yaml
              subPath: loki.yaml
            - name: loki-storage
              mountPath: /loki
          readinessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 300
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
        - name: loki-storage
          persistentVolumeClaim:
            claimName: loki-pvc
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
spec:
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
        - name: promtail
          image: grafana/promtail:latest
          args:
            - -config.file=/etc/promtail/promtail.yaml
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          volumeMounts:
            - name: promtail-config
              mountPath: /etc/promtail
            - name: docker-logs
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: positions
              mountPath: /positions
      volumes:
        - name: promtail-config
          configMap:
            name: promtail-config
        - name: docker-logs
          hostPath:
            path: /var/lib/docker/containers
        - name: positions
          persistentVolumeClaim:
            claimName: promtail-positions-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc 